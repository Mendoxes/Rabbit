{"version":3,"sources":["logo.svg","client.js","components/AllPosts.js","components/OnePost.js","App.js","reportWebVitals.js","index.js"],"names":["sanityClient","projectId","dataset","apiVersion","useCdn","AllPosts","useState","allPostsData","setAllPosts","useEffect","fetch","then","data","catch","console","error","className","map","post","index","to","slug","current","src","mainImage","asset","url","alt","title","builder","imageUrlBuilder","urlFor","source","image","OnePost","postData","setPostData","useParams","authorImage","name","style","height","blocks","body","clientConfig","App","component","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"8JAAe,I,6BCGAA,E,MAAAA,GAAa,CAE5BC,UAAW,WACXC,QAAS,aACTC,WAAY,aAEZC,QAAQ,I,OCJO,SAASC,IACtB,MAAoCC,mBAAS,MAA7C,mBAAOC,EAAP,KAAqBC,EAArB,KAoBA,OAlBAC,qBAAU,WACRT,EACGU,MADH,sJAaGC,MAAK,SAACC,GAAD,OAAUJ,EAAYI,MAC3BC,MAAMC,QAAQC,SAChB,IAGD,qBAAKC,UAAU,iCAAf,SACE,sBAAKA,UAAU,oBAAf,UACE,oBAAIA,UAAU,uCAAd,0BACA,oBAAIA,UAAU,kDAAd,0CAGA,qBAAKA,UAAU,2CAAf,SACGT,GACCA,EAAaU,KAAI,SAACC,EAAMC,GAAP,OACf,cAAC,IAAD,CAAMC,GAAI,IAAMF,EAAKG,KAAKC,QAA1B,SACE,uBACEN,UAAU,8EADZ,UAKE,qBACEA,UAAU,gDACVO,IAAKL,EAAKM,UAAUC,MAAMC,IAC1BC,IAAI,KAEN,sBACEX,UAAU,gEADZ,SAIE,oBACEA,UAAU,4FADZ,SAIGE,EAAKU,YAfLT,IAJ+BD,EAAKG,KAAKC,mB,oCC7B1DO,E,MAAUC,GAAgB9B,GAChC,SAAS+B,EAAOC,GACd,OAAOH,EAAQI,MAAMD,GAGR,SAASE,IACtB,MAAgC5B,mBAAS,MAAzC,mBAAO6B,EAAP,KAAiBC,EAAjB,KACQf,EAASgB,cAAThB,KAuBR,OArBAZ,qBAAU,WACRT,EACGU,MADH,6BAE0BW,EAF1B,iQAgBGV,MAAK,SAACC,GAAD,OAAUwB,EAAYxB,EAAK,OAChCC,MAAMC,QAAQC,SAChB,CAACM,IAECc,EAGH,qBAAKnB,UAAU,gCAAf,SACE,sBAAKA,UAAU,sDAAf,UACE,sBAAKA,UAAU,WAAf,UACE,qBAAKA,UAAU,8DAAf,SAEE,sBAAKA,UAAU,yCAAf,UACE,oBAAIA,UAAU,oCAAd,SACGmB,EAASP,QAEZ,sBAAKZ,UAAU,oCAAf,UACE,qBACEO,IAAKQ,EAAOI,EAASG,aAAaZ,MAClCV,UAAU,yBACVW,IAAI,QAEN,oBAAIX,UAAU,0CAAd,SACGmB,EAASI,eAKlB,qBACEvB,UAAU,gCACVO,IAAKQ,EAAOI,EAASX,WAAWE,MAChCC,IAAI,GACJa,MAAO,CAAEC,OAAQ,cAGrB,qBAAKzB,UAAU,6DAAf,SACE,cAAC,IAAD,CACE0B,OAAQP,EAASQ,KACjB1C,UAAWD,EAAa4C,aAAa3C,UACrCC,QAASF,EAAa4C,aAAa1C,iBAnCvB,6CCjBT2C,MAbf,WACE,OAEE,cAAC,IAAD,UACA,sBAAK7B,UAAU,MAAf,UACA,cAAC,IAAD,CAAO8B,UAAazC,EAAU0C,KAAM,IAAIC,OAAK,IAC7C,cAAC,IAAD,CAAOF,UAAaZ,EAASa,KAAM,SAASC,OAAK,UCDtCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBxC,MAAK,YAAkD,IAA/CyC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,SAM1BX,K","file":"static/js/main.3e7d3e15.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import sanityClient from \"@sanity/client\"\r\n\r\n\r\nexport default sanityClient({\r\n\r\nprojectId: \"b3z50f05\",   //from sanity package jason\r\ndataset: \"production\",\r\napiVersion: '2021-03-25', // use a UTC date string\r\n// token: 'sanity-auth-token', // or leave blank for unauthenticated usage\r\nuseCdn: true, // `false` if you want to ensure fresh data\r\n\r\n\r\n})","\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport sanityClient from \"../client.js\";\r\n\r\nexport default function AllPosts() {\r\n  const [allPostsData, setAllPosts] = useState(null);\r\n\r\n  useEffect(() => {\r\n    sanityClient\r\n      .fetch(\r\n        `*[_type == \"post\"]{\r\n        title,\r\n        slug,\r\n        mainImage{\r\n        asset->{\r\n          _id,\r\n          url\r\n        }\r\n      }\r\n    }` \r\n      )\r\n      .then((data) => setAllPosts(data))\r\n      .catch(console.error);\r\n  }, []); \r\n\r\n  return (\r\n    <div className=\"bg-green-100 min-h-screen p-12\">\r\n      <div className=\"container mx-auto\">\r\n        <h2 className=\"text-5xl flex justify-center cursive\">Life of Levi</h2>\r\n        <h3 className=\"text-lg text-gray-600 flex justify-center mb-12\">\r\n          Adventure of Levi the rabbit\r\n        </h3>\r\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-2 gap-8\">\r\n          {allPostsData &&\r\n            allPostsData.map((post, index) => (\r\n              <Link to={\"/\" + post.slug.current} key={post.slug.current}>\r\n                <span\r\n                  className=\"block h-64 relative rounded shadow leading-snug bg-white\r\n                       border-green-100\"\r\n                  key={index}\r\n                >\r\n                  <img\r\n                    className=\"w-full h-full rounded-r object-cover absolute\"\r\n                    src={post.mainImage.asset.url}\r\n                    alt=\"\"\r\n                  />\r\n                  <span\r\n                    className=\"block relative h-full flex justify-end items-end pr\r\n                      -4 pb-4\"\r\n                  >\r\n                    <h2\r\n                      className=\"text-gray-800 text-lg font-bold px-3 py-4 bg-red-700\r\n                        text-red-100 bg-opacity-75 rounded\"\r\n                    >\r\n                      {post.title}\r\n                    </h2>\r\n                  </span>\r\n                </span>\r\n              </Link>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n} ","\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport sanityClient from \"../client.js\";\r\nimport BlockContent from \"@sanity/block-content-to-react\";\r\nimport imageUrlBuilder from \"@sanity/image-url\";\r\n\r\nconst builder = imageUrlBuilder(sanityClient);\r\nfunction urlFor(source) {\r\n  return builder.image(source);\r\n}\r\n\r\nexport default function OnePost() {\r\n  const [postData, setPostData] = useState(null);\r\n  const { slug } = useParams();\r\n\r\n  useEffect(() => {\r\n    sanityClient\r\n      .fetch(\r\n        `*[slug.current == \"${slug}\"]{\r\n           title,\r\n           slug,\r\n           mainImage{\r\n           asset->{\r\n              _id,\r\n              url\r\n            }\r\n          },\r\n          body,\r\n          \"name\": author->name,\r\n          \"authorImage\": author->image\r\n       }`\r\n      )\r\n      .then((data) => setPostData(data[0]))\r\n      .catch(console.error);\r\n  }, [slug]);\r\n\r\n  if (!postData) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <div className=\"bg-gray-200 min-h-screen p-12\">\r\n      <div className=\"container shadow-lg mx-auto bg-green-100 rounded-lg\">\r\n        <div className=\"relative\">\r\n          <div className=\"absolute h-full w-full flex items-center justify-center p-8\">\r\n            {/* Title Section */}\r\n            <div className=\"bg-gray-100 bg-opacity-75 rounded p-12\">\r\n              <h2 className=\"cursive text-2xl lg:text-4xl mb-4\">\r\n                {postData.title}\r\n              </h2>\r\n              <div className=\"flex justify-center text-gray-800\">\r\n                <img\r\n                  src={urlFor(postData.authorImage).url()}\r\n                  className=\"w-10 h-10 rounded-full\"\r\n                  alt=\"Seb\"\r\n                />\r\n                <h4 className=\"cursive flex items-center pl-2 text-2xl\">\r\n                  {postData.name}\r\n                </h4>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <img\r\n            className=\"w-full object-cover rounded-t\"\r\n            src={urlFor(postData.mainImage).url()}\r\n            alt=\"\"\r\n            style={{ height: \"400px\" }}\r\n          />\r\n        </div>\r\n        <div className=\"px-16 lg:px-48 py-12 lg:py-20 prose lg:prose-xl max-w-full\">\r\n          <BlockContent\r\n            blocks={postData.body}\r\n            projectId={sanityClient.clientConfig.projectId}\r\n            dataset={sanityClient.clientConfig.dataset}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import logo from './logo.svg';\nimport './App.css';\nimport AllPosts from \"./components/AllPosts\"\nimport OnePost from \"./components/OnePost\"\n\nimport {BrowserRouter, Route} from \"react-router-dom\"\n\nfunction App() {\n  return (\n\n    <BrowserRouter>\n    <div className=\"App\"> \n    <Route component = {AllPosts} path =\"/\" exact />\n    <Route component = {OnePost} path =\"/:slug\" exact />\n    </div>\n    </BrowserRouter>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}